# Generated by Django 5.2.4 on 2025-10-22 17:24

import django.core.validators
import django.db.models.deletion
import personal_account.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('personal_account', '0024_profile_address_act_apartament_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile_invitee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile_invitee', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('parther_name', models.CharField(blank=True, default='', max_length=60, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ\\s]+$', 'Поле -ФИО партнёра- может содержать только русские буквы и пробелы')], verbose_name='Фамилия и имя партнёра')),
                ('parther_phone', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_phone], verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Информация о пригласившем',
                'verbose_name_plural': 'Информация о пригласившем',
            },
        ),
        migrations.CreateModel(
            name='Profile_partner',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile_partner', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('account_link', models.CharField(blank=True, default='', help_text='Ссылка на профиль в социальной сети или другом сервисе', max_length=500, null=True, verbose_name='Ссылка на аккаунт')),
            ],
            options={
                'verbose_name': 'Информация о структура',
                'verbose_name_plural': 'Информация о структура',
            },
        ),
        migrations.CreateModel(
            name='Profile_queue',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile_queue', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_of_purchase', models.CharField(blank=True, choices=[('', '--- Выберите тип ---'), ('Первичный', 'Первичный'), ('Вторичный', 'Вторичный')], default='', max_length=10, verbose_name='Тип покупки')),
                ('status', models.CharField(choices=[('Обработка', 'Обработка'), ('Пайщик', 'Пайщик'), ('Участник', 'Участник'), ('Кандидат', 'Кандидат')], default='Обработка', max_length=25, verbose_name='Статус')),
                ('price', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_price], verbose_name='Стоимость объекта недвижимости')),
                ('price_in_queue', models.CharField(blank=True, default='', max_length=15, validators=[personal_account.models.validate_price], verbose_name='Стоимость объекта при переходе в очередь')),
                ('id_coor', models.CharField(blank=True, default='', max_length=24, validators=[django.core.validators.RegexValidator('^[0-9A-Za-z-]+$', 'Номер счёта может содержать только цифры, латинские буквы и дефис')], verbose_name='Номер счёта')),
                ('contract_photo', models.ImageField(blank=True, default='', null=True, upload_to=personal_account.models.contract_photo_upload_path, validators=[personal_account.models.clean_document_photo], verbose_name='Договор/Соглашение')),
                ('share_payment_photo', models.ImageField(blank=True, default='', null=True, upload_to=personal_account.models.share_payment_photo_upload_path, validators=[personal_account.models.clean_document_photo], verbose_name='Последняя квитанция об оплате паевого взноса')),
                ('membership_fee_photo', models.ImageField(blank=True, default='', null=True, upload_to=personal_account.models.membership_fee_photo_upload_path, validators=[personal_account.models.clean_document_photo], verbose_name='Последня квитанция об оплате членского взноса')),
            ],
            options={
                'verbose_name': 'Информация о статусе',
                'verbose_name_plural': 'Информация о статусе',
            },
        ),
        migrations.AlterModelOptions(
            name='profile',
            options={'verbose_name': 'Личные данные', 'verbose_name_plural': 'Личные данные'},
        ),
        migrations.AlterModelOptions(
            name='profile_address',
            options={'verbose_name': 'Регистрационные данные', 'verbose_name_plural': 'Регистрационные данные'},
        ),
        migrations.RemoveField(
            model_name='profile',
            name='id_coor',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='parther_name',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='parther_phone',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='price',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='price_in_queue',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='type_of_purchase',
        ),
        migrations.AddField(
            model_name='profile',
            name='can_edit',
            field=models.CharField(choices=[('True', 'Разрешить полное редактирование'), ('False', 'Запретить редактирование'), ('One_done', 'One_done'), ('Two_done', 'Two_done'), ('Changes_one', 'Разрешить редактирование 1 блока'), ('Changes_two', 'Разрешить редактирование 2 блока'), ('Changes_three', 'Разрешить редактирование 3 блока')], default='True', max_length=13, verbose_name='Разрешение на редактирование'),
        ),
        migrations.AddField(
            model_name='profile',
            name='document_photo_main',
            field=models.ImageField(blank=True, default='', null=True, upload_to=personal_account.models.document_photo_main_upload_path, validators=[personal_account.models.clean_document_photo], verbose_name='Фото главной старницы'),
        ),
        migrations.AddField(
            model_name='profile',
            name='document_photo_reg',
            field=models.ImageField(blank=True, default='', null=True, upload_to=personal_account.models.document_photo_reg_upload_path, validators=[personal_account.models.clean_document_photo], verbose_name='Фото прописки'),
        ),
        migrations.AddField(
            model_name='profile',
            name='issued_by_whom',
            field=models.CharField(blank=True, default='', max_length=50, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ\\s\\(\\)]+$', 'Поле "Орган, выдавший документ" может содержать только русские буквы, пробелы и круглые скобки')], verbose_name='Орган, выдавший документ'),
        ),
        migrations.AddField(
            model_name='profile_address',
            name='info',
            field=models.BooleanField(default=False, max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='birth_date',
            field=models.DateField(blank=True, default=None, max_length=10, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='date_of_issue',
            field=models.DateField(blank=True, default=None, max_length=10, null=True, verbose_name='Дата выдачи'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='document_type',
            field=models.CharField(blank=True, choices=[('', '--- Выберите документ ---'), ('Паспорт', 'Паспорт')], default='', max_length=20, verbose_name='Документ'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='id_document',
            field=models.CharField(blank=True, default='', max_length=11, validators=[personal_account.models.validate_passport], verbose_name='Серия и номер паспорта'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='inn',
            field=models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_inn], verbose_name='ИНН'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='phone',
            field=models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_phone], verbose_name='Номер телефона'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='surname',
            field=models.CharField(blank=True, default='', max_length=30, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ]+$', 'Поле -Отчество- может содержать только русские буквы')], verbose_name='Отчество'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_address',
            field=models.CharField(default='', max_length=100, validators=[personal_account.models.validate_no_english], verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_apartament',
            field=models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Квартира'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_city',
            field=models.CharField(default='', max_length=30, validators=[personal_account.models.validate_no_english], verbose_name='Город'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_country',
            field=models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Страна'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_house',
            field=models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Дом'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_region',
            field=models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Регион'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='act_street',
            field=models.CharField(blank=True, default='', max_length=50, null=True, validators=[personal_account.models.validate_no_english], verbose_name='Улица'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_address',
            field=models.CharField(default='', max_length=100, validators=[personal_account.models.validate_no_english], verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_apartament',
            field=models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Квартира'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_city',
            field=models.CharField(default='', max_length=30, validators=[personal_account.models.validate_no_english], verbose_name='Город'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_country',
            field=models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Страна'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_house',
            field=models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Дом'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_region',
            field=models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Регион'),
        ),
        migrations.AlterField(
            model_name='profile_address',
            name='reg_street',
            field=models.CharField(blank=True, default='', max_length=50, null=True, validators=[personal_account.models.validate_no_english], verbose_name='Улица'),
        ),
        migrations.CreateModel(
            name='HistoricalProfile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('surname', models.CharField(blank=True, default='', max_length=30, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ]+$', 'Поле -Отчество- может содержать только русские буквы')], verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_phone], verbose_name='Номер телефона')),
                ('agree_to_terms', models.BooleanField(default=True, null=True, verbose_name='Согдасие на обработку данных')),
                ('document_type', models.CharField(blank=True, choices=[('', '--- Выберите документ ---'), ('Паспорт', 'Паспорт')], default='', max_length=20, verbose_name='Документ')),
                ('id_document', models.CharField(blank=True, default='', max_length=11, validators=[personal_account.models.validate_passport], verbose_name='Серия и номер паспорта')),
                ('issued_by_whom', models.CharField(blank=True, default='', max_length=50, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ\\s\\(\\)]+$', 'Поле "Орган, выдавший документ" может содержать только русские буквы, пробелы и круглые скобки')], verbose_name='Орган, выдавший документ')),
                ('inn', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_inn], verbose_name='ИНН')),
                ('birth_date', models.DateField(blank=True, default=None, max_length=10, null=True, verbose_name='Дата рождения')),
                ('date_of_issue', models.DateField(blank=True, default=None, max_length=10, null=True, verbose_name='Дата выдачи')),
                ('document_photo_main', models.TextField(blank=True, default='', max_length=100, null=True, validators=[personal_account.models.clean_document_photo], verbose_name='Фото главной старницы')),
                ('document_photo_reg', models.TextField(blank=True, default='', max_length=100, null=True, validators=[personal_account.models.clean_document_photo], verbose_name='Фото прописки')),
                ('can_edit', models.CharField(choices=[('True', 'Разрешить полное редактирование'), ('False', 'Запретить редактирование'), ('One_done', 'One_done'), ('Two_done', 'Two_done'), ('Changes_one', 'Разрешить редактирование 1 блока'), ('Changes_two', 'Разрешить редактирование 2 блока'), ('Changes_three', 'Разрешить редактирование 3 блока')], default='True', max_length=13, verbose_name='Разрешение на редактирование')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Личные данные',
                'verbose_name_plural': 'historical Личные данные',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProfile_address',
            fields=[
                ('reg_country', models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Страна')),
                ('reg_region', models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Регион')),
                ('reg_city', models.CharField(default='', max_length=30, validators=[personal_account.models.validate_no_english], verbose_name='Город')),
                ('reg_address', models.CharField(default='', max_length=100, validators=[personal_account.models.validate_no_english], verbose_name='Адрес')),
                ('reg_street', models.CharField(blank=True, default='', max_length=50, null=True, validators=[personal_account.models.validate_no_english], verbose_name='Улица')),
                ('reg_house', models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Дом')),
                ('reg_apartament', models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Квартира')),
                ('reg_postal_code', models.CharField(default='', max_length=6, validators=[personal_account.models.validate_postal_code], verbose_name='Почтовый индекс')),
                ('is_approved', models.BooleanField(default=False, max_length=5, null=True, verbose_name='Подтверждение')),
                ('info', models.BooleanField(default=False, max_length=1, null=True)),
                ('act_country', models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Страна')),
                ('act_region', models.CharField(default='', max_length=50, validators=[personal_account.models.validate_no_english], verbose_name='Регион')),
                ('act_city', models.CharField(default='', max_length=30, validators=[personal_account.models.validate_no_english], verbose_name='Город')),
                ('act_address', models.CharField(default='', max_length=100, validators=[personal_account.models.validate_no_english], verbose_name='Адрес')),
                ('act_street', models.CharField(blank=True, default='', max_length=50, null=True, validators=[personal_account.models.validate_no_english], verbose_name='Улица')),
                ('act_house', models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Дом')),
                ('act_apartament', models.CharField(default='', max_length=20, validators=[personal_account.models.validate_no_english], verbose_name='Квартира')),
                ('act_postal_code', models.CharField(default='', max_length=6, validators=[personal_account.models.validate_postal_code], verbose_name='Почтовый индекс')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Регистрационные данные',
                'verbose_name_plural': 'historical Регистрационные данные',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProfile_invitee',
            fields=[
                ('parther_name', models.CharField(blank=True, default='', max_length=60, validators=[django.core.validators.RegexValidator('^[а-яА-ЯёЁ\\s]+$', 'Поле -ФИО партнёра- может содержать только русские буквы и пробелы')], verbose_name='Фамилия и имя партнёра')),
                ('parther_phone', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_phone], verbose_name='Номер телефона')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Информация о пригласившем',
                'verbose_name_plural': 'historical Информация о пригласившем',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProfile_partner',
            fields=[
                ('account_link', models.CharField(blank=True, default='', help_text='Ссылка на профиль в социальной сети или другом сервисе', max_length=500, null=True, verbose_name='Ссылка на аккаунт')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Информация о структура',
                'verbose_name_plural': 'historical Информация о структура',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProfile_queue',
            fields=[
                ('type_of_purchase', models.CharField(blank=True, choices=[('', '--- Выберите тип ---'), ('Первичный', 'Первичный'), ('Вторичный', 'Вторичный')], default='', max_length=10, verbose_name='Тип покупки')),
                ('status', models.CharField(choices=[('Обработка', 'Обработка'), ('Пайщик', 'Пайщик'), ('Участник', 'Участник'), ('Кандидат', 'Кандидат')], default='Обработка', max_length=25, verbose_name='Статус')),
                ('price', models.CharField(blank=True, default='', max_length=12, validators=[personal_account.models.validate_price], verbose_name='Стоимость объекта недвижимости')),
                ('price_in_queue', models.CharField(blank=True, default='', max_length=15, validators=[personal_account.models.validate_price], verbose_name='Стоимость объекта при переходе в очередь')),
                ('id_coor', models.CharField(blank=True, default='', max_length=24, validators=[django.core.validators.RegexValidator('^[0-9A-Za-z-]+$', 'Номер счёта может содержать только цифры, латинские буквы и дефис')], verbose_name='Номер счёта')),
                ('contract_photo', models.TextField(blank=True, default='', max_length=100, null=True, validators=[personal_account.models.clean_document_photo], verbose_name='Договор/Соглашение')),
                ('share_payment_photo', models.TextField(blank=True, default='', max_length=100, null=True, validators=[personal_account.models.clean_document_photo], verbose_name='Последняя квитанция об оплате паевого взноса')),
                ('membership_fee_photo', models.TextField(blank=True, default='', max_length=100, null=True, validators=[personal_account.models.clean_document_photo], verbose_name='Последня квитанция об оплате членского взноса')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Информация о статусе',
                'verbose_name_plural': 'historical Информация о статусе',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]